version: "3"

services:
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_PASSWORD: flyingfox
      POSTGRES_USER: fox
      POSTGRES_DB: covid
    ports:
      - "5500:5432"
    volumes:
       - "./dev/dbdata:/var/lib/postgresql/data"

  adminer:
    image: adminer:4
    restart: always
    ports:
      - 8080:8080

  python:
    build:
      context: .
      dockerfile: ./.build/Dockerfile_py
    depends_on:
      - db
    environment:
      db_username: fox
      db_password: flyingfox
      db_host: db
      db_port: 5432
      db_name: covid

  hospital:
    build:
      context: .
      dockerfile: ./dev/.build_dev/Dockerfile_rust
    command: /bin/sh -c "cd hospital && cargo run"
    depends_on:
      - db
    volumes:
      - "./Cargo.toml:/work/Cargo.toml"
      - "./Cargo.lock:/work/Cargo.lock"
      - "./db:/work/db"
      - "./health:/work/health"
      - "./utils:/work/utils"
      - "./hospital:/work/hospital"
      - "./pcr:/work/pcr"
      - "./keys:/work/keys"
      - "./proto:/work/proto"
    environment:
      rust_env: prod
      server_cert: ../keys/server-cert.pem
      server_key: ../keys/server-key.key
      db_username: fox
      db_password: flyingfox
      db_host: db
      db_port: 5432
      db_name: covid
    ports:
      - 9000:9000

  pcr:
    build:
      context: .
      dockerfile: ./dev/.build_dev/Dockerfile_rust
    command: /bin/sh -c "cd pcr && cargo run"
    depends_on:
      - db
    volumes:
      - "./Cargo.toml:/work/Cargo.toml"
      - "./Cargo.lock:/work/Cargo.lock"
      - "./db:/work/db"
      - "./health:/work/health"
      - "./utils:/work/utils"
      - "./hospital:/work/hospital"
      - "./pcr:/work/pcr"
      - "./keys:/work/keys"
      - "./proto:/work/proto"
    environment:
      rust_env: prod
      server_cert: ../keys/server-cert.pem
      server_key: ../keys/server-key.key
      db_username: fox
      db_password: flyingfox
      db_host: db
      db_port: 5432
      db_name: covid
    ports:
      - 9090:9090
